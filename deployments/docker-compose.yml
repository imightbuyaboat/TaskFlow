version: '3.8'

services:
  task-api:
    build:
      context: ..
      dockerfile: task-api/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
      - rabbitmq
  task-scheduler:
    build:
      context: ..
      dockerfile: task-scheduler/Dockerfile
    depends_on:
      - db
      - rabbitmq
  task-worker:
    build:
      context: ..
      dockerfile: task-worker/Dockerfile
    volumes:
      - ${HOST_IMAGE_PATH}:/images
    depends_on:
      - db
      - rabbitmq
  db:
    image: postgres:latest
    container_name: my_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
  
  rabbitmq:
    image: rabbitmq:4.1-management
    container_name: my_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${AMQP_USER}
      RABBITMQ_DEFAULT_PASS: ${AMQP_PASSWORD}
    ports:
      - "${AMQP_PORT:-5672}:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  postgres_data:
  rabbitmq_data: